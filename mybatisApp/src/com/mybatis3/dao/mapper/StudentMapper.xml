<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis3.dao.mapper.StudentMapper">
	<!-- ################### resultMap정의 ########################## -->
	<resultMap id="studentResultMap" type="com.mybatis3.domain.Student" autoMapping="true"  >
		<result column="STUD_ID" property="studId"/>
		<result column="NAME" property="name"/>
		<result column="EMAIL" property="email"/>
		<result column="DOB" property="dob"/>
	</resultMap>
	<resultMap id="studentWithAddressResultMap" type="Student" autoMapping="true">
		<result column="STUD_ID" property="studId"/>
		<association property="address" javaType="com.mybatis3.domain.Address" autoMapping="true">
			<result column="ADDR_ID" property="addrId"/>
		</association>
	</resultMap>
	
	<resultMap  id="studentWithCoursesResultMap"  type="com.mybatis3.domain.Student" autoMapping="true">
		<result column="STUD_ID" property="studId"/>
		<result column="STUDENT_NAME" property="name"/>
		<collection property="courseList" ofType="com.mybatis3.domain.Course" 
										  javaType="java.util.List" autoMapping="true">
			<result column="COURSE_ID" property="courseId"/>
			<result column="COURSE_NAME" property="name"/>
			<result column="START_DATE" property="startDate"/>
			<result column="ENDT_DATE" property="endDate"/>
		</collection>
	</resultMap>
	<!-- @@@@@@@@@@@@@@@@@@@@@@@ select[students + addresses JOIN] @@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<select id="findStudentByIdWithAddress" parameterType="int" resultMap="studentWithAddressResultMap">
		select stud_id, name, email,phone, a.addr_id, street, city, state, zip, country
  		FROM students s 
      	left outer join addresses a 
      	on s.addr_id=a.addr_id
      	where s.stud_id=#{studId}
	</select>
	<!-- @@@@@@@@@@@@@@@@@@@@@@@ select[students + courses JOIN] @@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<select id="findStudentByIdWithCourses" parameterType="int" resultMap="studentWithCoursesResultMap">
		select  s.stud_id,s.name as student_name ,s.email,s.phone,s.dob ,
        c.course_id,c.name as course_name ,c.description,c.start_date,c.end_date
		from students s 
		left outer join course_enrollment ce
		on s.stud_id = ce.stud_id
		left outer join courses c
		on ce.course_id=c.course_id where s.stud_id=#{studId}
	</select>
	
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@ select @@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<!--resultMap  -->
	<select id="findStudentByIdResultMap" 
	        parameterType="java.lang.Integer"  
			resultMap="studentResultMap">
		select stud_id,name,email,dob  from students where stud_id = #{studId} 
	</select>
	<select id="findAllStudentsResultMap" 
			 resultMap="studentResultMap">
		select stud_id ,name,email,dob from students
	</select>
	<!--resultType Dto  -->
	<select id="findStudentById" 
	        parameterType="java.lang.Integer"  
			resultType="com.mybatis3.domain.Student"  >
		select stud_id as studid,name,email,dob  from students where stud_id = #{studId} 
	</select>
	
	<select id="findAllStudents" 
	        
			resultType="com.mybatis3.domain.Student"  >
		select stud_id as studid,name,email,dob from students
	</select>
	
	<select id="findAllOrderedStudents" 
	        parameterType="string"
			resultType="com.mybatis3.domain.Student"  >
		select stud_id as studid,name,email,dob from students order by ${_parameter}
	</select>
	
	
	<!--resultType Wrappper(String) -->
	<select id="findStudentNameById" 
			parameterType="java.lang.Integer" 
			resultType="java.lang.String">
		select name	from students where stud_id=#{studId}	
	</select>
	<select id="findStudentNameList" 
			resultType="java.lang.String">
		select name	from students	
	</select>
	<!--resultType Map -->
	<select id="findStudentByIdMap" 
			parameterType="java.lang.Integer"  
			resultType="java.util.Map"  >
		select stud_id,name,email,dob  from students where stud_id = #{studId} 
	</select>
	<select id="findAllStudentsMapList" 
			resultType="java.util.Map"  >
		select stud_id,name,email,dob from students
	</select>
	
	<!-- 
		parameterType
		  1. Dto
		  2. Wrapper(String),Date
		  3. Map
	 -->
	
	<!--@@@@@@@@@@@@@@@@@@@@@@@ insert @@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<insert id="insertStudent" parameterType="com.mybatis3.domain.Student">
		insert into students(stud_id,name,email,dob)
		values (#{studId},#{name},#{email},#{dob})
	</insert>
	<insert id="insertStudentBySequence1" parameterType="com.mybatis3.domain.Student">
		insert into students(stud_id,name,email,dob)
		values (STUDENTS_STUD_ID_SEQ.nextval,#{name},#{email},#{dob})
	</insert>
	<insert id="insertStudentBySequence2" parameterType="com.mybatis3.domain.Student">
		<selectKey order="BEFORE" keyProperty="studId" resultType="java.lang.Integer">
			select STUDENTS_STUD_ID_SEQ.nextval from dual
		</selectKey>
		insert into students(stud_id,name,email,dob)
		values (#{studId},#{name},#{email},#{dob})
	</insert>
	<!--@@@@@@@@@@@@@@@@@@@@@@@ update @@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<update id="updateStudentById" parameterType="Student">
			update students set name=#{name},email=#{email},dob=#{dob}
			where stud_id =#{studId}
	</update>
	<!--@@@@@@@@@@@@@@@@@@@@@@@ delete @@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<delete id="deleteStudentById" parameterType="int">
		delete from students
		where stud_id=#{studId}
	</delete>
	<delete id="deleteStudentByName" parameterType="java.lang.String">
		delete from students
		where name=#{name}
	</delete>
	<delete id="deleteStudentByNameLike" parameterType="java.lang.String">
		delete from students
		where name like '%'||#{name}||'%'
	</delete>
	
	
</mapper>












